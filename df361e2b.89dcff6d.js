(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{103:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return O}));var b=a(0),n=a.n(b);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function m(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);t&&(b=b.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,b)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?m(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):m(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,b,n=function(e,t){if(null==e)return{};var a,b,n={},r=Object.keys(e);for(b=0;b<r.length;b++)a=r[b],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(b=0;b<r.length;b++)a=r[b],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=n.a.createContext({}),c=function(e){var t=n.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},o=function(e){var t=c(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var a=e.components,b=e.mdxType,r=e.originalType,m=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),o=c(a),u=b,O=o["".concat(m,".").concat(u)]||o[u]||s[u]||r;return a?n.a.createElement(O,p(p({ref:t},i),{},{components:a})):n.a.createElement(O,p({ref:t},i))}));function O(e,t){var a=arguments,b=t&&t.mdxType;if("string"==typeof e||b){var r=a.length,m=new Array(r);m[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:b,m[1]=p;for(var i=2;i<r;i++)m[i]=a[i];return n.a.createElement.apply(null,m)}return n.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},93:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return m})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return l})),a.d(t,"Highlight",(function(){return i})),a.d(t,"default",(function(){return o}));var b=a(2),n=a(6),r=(a(0),a(103)),m={id:"doc2",title:"Data Module",sidebar_label:"Data"},p={unversionedId:"doc2",id:"doc2",isDocsHomePage:!1,title:"Data Module",description:"Air Daily Quality",source:"@site/docs/doc2.md",permalink:"/qAIRa.github.io/docs/doc2",editUrl:"https://github.com/qAIRa/Documentation-OpenSource/docs/doc2.md",sidebar_label:"Data",sidebar:"Docs",previous:{title:"Business",permalink:"/qAIRa.github.io/docs/"},next:{title:"This is Document Number 3",permalink:"/qAIRa.github.io/docs/doc3"}},l=[{value:"Air Daily Quality",id:"air-daily-quality",children:[]},{value:"Air Quality",id:"air-quality",children:[]},{value:"Gas Inca",id:"gas-inca",children:[]},{value:"Get Data Helper",id:"get-data-helper",children:[]},{value:"Post Data Helper",id:"post-data-helper",children:[]},{value:"Processed Measurement",id:"processed-measurement",children:[]},{value:"Valid Processed Measurement",id:"valid-processed-measurement",children:[]}],i=function(e){var t=e.children,a=e.color;return Object(r.b)("span",{style:{backgroundColor:a,borderRadius:"2px",color:"#000000",padding:"0.2rem"}},t)},c={rightToc:l,Highlight:i};function o(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(b.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h3",{id:"air-daily-quality"},"Air Daily Quality"),Object(r.b)("p",null,"This file shows all the daily data queries."),Object(r.b)("h4",{id:"air_daily_qualitystoreairdailydata"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"air_daily_quality.storeAirDailyData()")),Object(r.b)("p",null,"Air Daily Measurement function to record daily average measurement"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"data_jason")," (",Object(r.b)("em",{parentName:"li"},"json"),") - json of daily average measurement")),Object(r.b)("h4",{id:"air_daily_qualitygetairdailymeasurementstimeperiod"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"air_daily_quality.getAirDailyMeasurementsTimePeriod()")),Object(r.b)("p",null,"Air Daily Measurement function to get daily average measurement based on week number and year"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"qhawax_id")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - qHAWAX ID")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"init_week")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - initial week number")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"init_year")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - initial year")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"end_week")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - last week number")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"end_year")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - end year"))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"air-quality"},"Air Quality"),Object(r.b)("p",null,"This file shows all the ..."),Object(r.b)("h4",{id:"air_qualitystoreairqualitydata"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"air_quality.storeAirQualityData()")),Object(r.b)("p",null,"GET: lists all measurements in ppb of air quality measurement table.\nThis is an hourly average measurement."),Object(r.b)("p",null,"POST: records processed measurement and valid processed measurement every five seconds"),Object(r.b)("p",null,"Json input of Air Quality Measurement"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"name")," (",Object(r.b)("em",{parentName:"p"},"string"),") - qHAWAX name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"interval_hours")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - the last N hours we want it"))),Object(r.b)("h4",{id:"air_qualitygetairqualitymeasurementstimeperiod"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"air_quality.getAirQualityMeasurementsTimePeriod()")),Object(r.b)("p",null,"Lists all measurements in ppb of air quality measurement table in a defined period of time. This is an hourly average measurement."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"name")," (",Object(r.b)("em",{parentName:"p"},"string"),") - qHAWAX name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)"))),Object(r.b)("h4",{id:"air_qualitygetgasaveragemeasurementsevery24"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"air_quality.getGasAverageMeasurementsEvery24()")),Object(r.b)("p",null,"Lists all values by a defined gas or dust in ug/m3 of air quality measurement table of the last 24 hours."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"qhawax")," (",Object(r.b)("em",{parentName:"p"},"string"),") - qHAWAX name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"gas")," (",Object(r.b)("em",{parentName:"p"},"string"),") - gas or dust name (CO,H2S,O3,NO2,SO2,PM25,PM10)"))),Object(r.b)("h4",{id:"air_qualitygetaveragevalidprocessedmeasurementstimeperiod"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"air_quality.getAverageValidProcessedMeasurementsTimePeriod()")),Object(r.b)("p",null,"Lists all average measurements of valid processed measurement table in a defined period of time and company."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"qhawax_id")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - qHAWAX ID")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)"))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gas-inca"},"Gas Inca"),Object(r.b)("p",null,"This file shows all the..."),Object(r.b)("h4",{id:"gas_incahandlegasinca"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"gas_inca.handleGasInca()")),Object(r.b)("p",null,"POST: To record gas and dust measurement in gas Inca table."),Object(r.b)("p",null,"Json input of Air Quality Measurement."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"timestamp_zone")," (",Object(r.b)("em",{parentName:"p"},"string"),") - timestamp with time zone")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"CO")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of CO measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"CO_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of CO measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"H2S")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of H2S measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"H2S_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of H2S measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"SO2")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of SO2 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"SO2_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of SO2 measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NO2")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of NO2 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NO2_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of NO2 measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"O3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of O3 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"O3_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of O3 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"PM25")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of PM25 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"PM1")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of PM1 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"PM10")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of PM10 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"UV")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of UV measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"UVA")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of UVA measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"UVB")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of UVB measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"spl")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of noise measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"humidity")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of humidity measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"pressure")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of pressure measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"temperature")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of temperature measurement in Celsius"))),Object(r.b)("h4",{id:"gas_incagetlastgasincadata"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"gas_inca.getLastGasIncaData()")),Object(r.b)("p",null,"Lists all measurements of the last hour from the gas Inca table."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"No parameters required")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"get-data-helper"},"Get Data Helper"),Object(r.b)("p",null,"This file shows all the.."),Object(r.b)("h4",{id:"get_data_helpergetqhawaxmodeqhawax_id"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.getQhawaxMode(qhawax_id)")),Object(r.b)("p",null,"Helper Processed Measurement function to get the qHAWAX mode."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"qhawax_id")," (",Object(r.b)("em",{parentName:"li"},"integer"),") - qHAWAX ID")),Object(r.b)("h4",{id:"get_data_helpergetcomercialnameqhawax_id"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.getComercialName(qhawax_id)")),Object(r.b)("p",null,"Helper Processed Measurement function to get the qHAWAX commercial name."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"qhawax_id")," (",Object(r.b)("em",{parentName:"li"},"integer"),") - qHAWAX ID")),Object(r.b)("h4",{id:"get_data_helperquerydbairqualityqhawax_name-initial_timestamp-final_timestamp"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.queryDBAirQuality(qhawax_name, initial_timestamp, final_timestamp)")),Object(r.b)("p",null,"Helper function to get the measurement records from a specific qHAWAX in a defined period of time"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"qhawax_name")," (",Object(r.b)("em",{parentName:"p"},"string"),") - qHAWAX name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - initial date with timezone")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - final date with time"))),Object(r.b)("h4",{id:"get_data_helpergettimeqhawaxhistoryinstallation_id"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.getTimeQhawaxHistory(installation_id)")),Object(r.b)("p",null,"Helper function to get the last dates in which a qHAWAX has been turned on and turned off."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"installation_id")," (",Object(r.b)("em",{parentName:"li"},"integer"),") - qHAWAX ID")),Object(r.b)("h4",{id:"get_data_helperquerydbgasaveragemeasurementqhawax_name-gas_name-values_list"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.queryDBGasAverageMeasurement(qhawax_name, gas_name, values_list)")),Object(r.b)("p",null,"Helper function to get gas average measurement."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"qhawax_name")," (",Object(r.b)("em",{parentName:"p"},"string"),") - qHAWAX gas name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"gas_name")," (",Object(r.b)("em",{parentName:"p"},"string"),") - gas or dust gas name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"values_list")," (",Object(r.b)("em",{parentName:"p"},"array"),") - array of last time on and last time registration."))),Object(r.b)("h4",{id:"get_data_helperquerydbvalidairqualityqhawax_id-initial_timestamp-final_timestamp"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.queryDBValidAirQuality(qhawax_id, initial_timestamp, final_timestamp)")),Object(r.b)("p",null,"Helper function to get Air Quality measurement."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"qhawax_id")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - qHAWAX ID")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - initial date with time")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - final date with time"))),Object(r.b)("h4",{id:"get_data_helperquerydbgasincainitial_timestamp-final_timestamp"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.queryDBGasInca(initial_timestamp, final_timestamp)")),Object(r.b)("p",null,"Helper function to get GAS INCA measurement."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - initial date with time")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - final date with time"))),Object(r.b)("h4",{id:"get_data_helperquerydbprocessedqhawax_name-initial_timestamp-final_timestampdate_format"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.queryDBProcessed(qhawax_name, initial_timestamp, final_timestamp,date_format)")),Object(r.b)("p",null,"Helper function to get Processed Measurement data based on qHAWAX name."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"qhawax_name")," (",Object(r.b)("em",{parentName:"p"},"string"),") - qHAWAX name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - initial timestamp of search")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - final timestamp of search")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"date_format")," (",Object(r.b)("em",{parentName:"p"},"string"),") - timestamp format"))),Object(r.b)("h4",{id:"get_data_helpergetnoisedataqhawax_name"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.getNoiseData(qhawax_name)")),Object(r.b)("p",null,"Helper Processed Measurement function to get Noise Area Description."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"qhawax_name")," (",Object(r.b)("em",{parentName:"li"},"string"),") - qHAWAX name")),Object(r.b)("h4",{id:"get_data_helpergethoursdifferenceqhawax_id"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.getHoursDifference(qhawax_id)")),Object(r.b)("p",null,"Helper Processed Measurement function to get difference between ",Object(r.b)("strong",{parentName:"p"},"last_registration_time")," and ",Object(r.b)("strong",{parentName:"p"},"last_time_physically_turn_on"),"."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"qhawax_id")," (",Object(r.b)("em",{parentName:"li"},"integer"),") - qHAWAX ID")),Object(r.b)("h4",{id:"get_data_helperquerydbvalidprocessedbyqhawaxscriptqhawax_id-initial_timestamp-final_timestamp"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.queryDBValidProcessedByQhawaxScript(qhawax_id, initial_timestamp, final_timestamp)")),Object(r.b)("p",null,"Helper function to get Valid Processed Measurement data based on qHAWAX ID."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"qhawax_id")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - qHAWAX ID")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - initial timestamp of search")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - final timestamp of search"))),Object(r.b)("h4",{id:"get_data_helpergetlatesttimestampvalidprocessedqhawax_name"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.getLatestTimestampValidProcessed(qhawax_name)")),Object(r.b)("p",null,"Helper function to get latest valid timestamp of Valid Processed Measurement table based on qHAWAX name."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"qhawax_name")," (",Object(r.b)("em",{parentName:"li"},"string"),") - qHAWAX name")),Object(r.b)("h4",{id:"get_data_helperquerydbdailyvalidprocessedbyqhawaxscriptinstallation_id-initial_timestamp-final_timestamp"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"get_data_helper.queryDBDailyValidProcessedByQhawaxScript(installation_id, initial_timestamp, final_timestamp)")),Object(r.b)("p",null,"Helper Valid Processed Measurement function to valid measurement filter by time."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"installation_id")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - qHAWAX ID")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - start date")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp with time zone"),") - end date"))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"post-data-helper"},"Post Data Helper"),Object(r.b)("p",null,"The file shows the functions that register and request data related to the Post Data Helper table."),Object(r.b)("h4",{id:"post_data_helperstoreairqualitydataindbdata"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"post_data_helper.storeAirQualityDataInDB(data)")),Object(r.b)("p",null,"Helper function to store new records in Air Quality Measurement table."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("p",null,"Json input of following Air Measurement fields:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"ID")," (",Object(r.b)("em",{parentName:"p"},"string"),") - qHAWAX ID")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"timestamp")," (",Object(r.b)("em",{parentName:"p"},"string"),") - timestamp with time zone")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"CO")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of CO measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"CO_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of CO measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"H2S")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of H2S measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"H2S_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of H2S measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"SO2")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of SO2 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"SO2_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of SO2 measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NO2")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of NO2 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NO2_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of NO2 measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"O3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of O3 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"O3_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of O3 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"PM25")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of PM25 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"PM1")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of PM1 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"PM10")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of PM10 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"UV")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of UV measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"UVA")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of UVA measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"UVB")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of UVB measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"spl")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of noise measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"humidity")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of humidity measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"pressure")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of pressure measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"temperature")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of temperature measurement in Celsius"))),Object(r.b)("h4",{id:"post_data_helperstoregasincaindbdata"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"post_data_helper.storeGasIncaInDB(data)")),Object(r.b)("p",null,"Helper function to record GAS INCA measurement."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"data")," (",Object(r.b)("em",{parentName:"li"},"json"),") - gas Inca measurement")),Object(r.b)("h4",{id:"post_data_helperstoreprocesseddataindbdata"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"post_data_helper.storeProcessedDataInDB(data)")),Object(r.b)("p",null,"Helper Processed Measurement function to store Processed Data."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"data")," (",Object(r.b)("em",{parentName:"li"},"json"),") - Processed measurement detail")),Object(r.b)("h4",{id:"post_data_helperstorevalidprocesseddataindbdata-qhawax_id"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"post_data_helper.storeValidProcessedDataInDB(data, qhawax_id)")),Object(r.b)("p",null,"Helper Processed Measurement function to insert Valid Processed Data."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"data")," (",Object(r.b)("em",{parentName:"p"},"json"),") - Processed measurement valid detail")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"qhawax_id")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - qHAWAX ID"))),Object(r.b)("h4",{id:"post_data_helperstoreairdailyqualitydataindbdata"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"post_data_helper.storeAirDailyQualityDataInDB(data)")),Object(r.b)("p",null,"Helper Daily Air Measurement function to store air daily measurement."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"data")," (",Object(r.b)("em",{parentName:"li"},"json"),") - json of average of daily measurement")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"processed-measurement"},"Processed Measurement"),Object(r.b)("h4",{id:"processed_measurementgetprocesseddata"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"processed_measurement.getProcessedData()")),Object(r.b)("p",null,"Lists all measurement of processed measurement table record the last N minutes."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"name")," (",Object(r.b)("em",{parentName:"p"},"string"),") - qHAWAX name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"interval_minutes")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - the last N minutes we want"))),Object(r.b)("h4",{id:"processed_measurementhandleprocesseddata"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"processed_measurement.handleProcessedData()")),Object(r.b)("p",null,"Records processed measurement and valid processed measurement every five seconds"),Object(r.b)("p",null,"Json input of following Air Measurement fields:"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"timestamp")," (",Object(r.b)("em",{parentName:"p"},"string"),") - timestamp with time zone")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"CO")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of CO measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"CO_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of CO measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"H2S")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of H2S measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"H2S_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of H2S measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"SO2")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of SO2 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"SO2_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of SO2 measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NO2")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of NO2 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NO2_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of NO2 measurement in ug/m3")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"O3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of O3 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"O3_ug_m3")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of O3 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"PM25")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of PM25 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"PM1")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of PM1 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"PM10")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of PM10 measurement in ppb")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"UV")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of UV measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"UVA")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of UVA measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"UVB")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of UVB measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"spl")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of noise measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"humidity")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of humidity measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"pressure")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of pressure measurement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"temperature")," (",Object(r.b)("em",{parentName:"p"},"double"),") - value of temperature measurement in Celsius"))),Object(r.b)("h4",{id:"processed_measurementgetaverageprocessedmeasurementstimeperiod"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"processed_measurement.getAverageProcessedMeasurementsTimePeriod()")),Object(r.b)("p",null,"Lists all average measurements of processed measurement table in a defined period of time"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"name")," (",Object(r.b)("em",{parentName:"p"},"string"),") - qHAWAX name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)"))),Object(r.b)("h4",{id:"processed_measurementgetprocessedmeasurementstimeperiod"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"processed_measurement.getProcessedMeasurementsTimePeriod()")),Object(r.b)("p",null,"Lists all measurements of processed measurement table in a define period of time"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"name")," (",Object(r.b)("em",{parentName:"p"},"string"),") - qHAWAX name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)"))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"valid-processed-measurement"},"Valid Processed Measurement"),Object(r.b)("p",null,"The file shows the ..."),Object(r.b)("h4",{id:"valid_processed_measurementgetvalidprocessedmeasurementstimeperiod"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"valid_processed_measurement.getValidProcessedMeasurementsTimePeriod()")),Object(r.b)("p",null,"Lists all measurements of valid processed measurement table in a define period of time and company"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"qhawax_id")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - qHAWAX ID")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(r.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)"))),Object(r.b)("h4",{id:"valid_processed_measurementgetvalidprocesseddata"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"valid_processed_measurement.getValidProcessedData()")),Object(r.b)("p",null,"Lists all measurements of valid processed measurement table record the last N minutes"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"qhawax_id")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - qHAWAX ID")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"interval_minutes")," (",Object(r.b)("em",{parentName:"p"},"integer"),") - the last N minutes we want it"))),Object(r.b)("h4",{id:"valid_processed_measurementgettimeofvalidprocessed"},Object(r.b)(i,{color:"#b2e4f7",mdxType:"Highlight"},"valid_processed_measurement.getTimeOfValidProcessed()")),Object(r.b)("p",null,"Gets the time of the last record in valid processed measurement table"),Object(r.b)("p",null,"If this qHAWAX does not exist, returns []"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Parameters")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"name")," (",Object(r.b)("em",{parentName:"li"},"string"),") - qHAWAX name")))}o.isMDXComponent=!0}}]);