(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{103:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return O}));var r=a(0),n=a.n(r);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function m(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?m(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):m(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},b=Object.keys(e);for(r=0;r<b.length;r++)a=b[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(r=0;r<b.length;r++)a=b[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=n.a.createContext({}),l=function(e){var t=n.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=l(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},i=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,b=e.originalType,m=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=l(a),i=r,O=s["".concat(m,".").concat(i)]||s[i]||u[i]||b;return a?n.a.createElement(O,p(p({ref:t},c),{},{components:a})):n.a.createElement(O,p({ref:t},c))}));function O(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var b=a.length,m=new Array(b);m[0]=i;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,m[1]=p;for(var c=2;c<b;c++)m[c]=a[c];return n.a.createElement.apply(null,m)}return n.a.createElement.apply(null,a)}i.displayName="MDXCreateElement"},63:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return m})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return o})),a.d(t,"Highlight",(function(){return c})),a.d(t,"default",(function(){return s}));var r=a(2),n=a(6),b=(a(0),a(103)),m={id:"processed_measurementMod",title:"Processed Measurement Module",sidebar_label:"Processed Measurement Module"},p={unversionedId:"processed_measurementMod",id:"processed_measurementMod",isDocsHomePage:!1,title:"Processed Measurement Module",description:"The file shows the functions that register and request data related to the Processed Measurement table.",source:"@site/APIresources/data.processed_measurement.md",permalink:"/APIresources/processed_measurementMod",sidebar_label:"Processed Measurement Module",sidebar:"APIresources",previous:{title:"Post Data Helper Module",permalink:"/APIresources/post_data_helperMod"},next:{title:"Valid Processed Measurement Module",permalink:"/APIresources/valid_processed_measurementMod"}},o=[],c=function(e){var t=e.children,a=e.color;return Object(b.b)("span",{style:{backgroundColor:a,borderRadius:"2px",color:"#000000",padding:"0.2rem"}},t)},l={rightToc:o,Highlight:c};function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(b.b)("wrapper",Object(r.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"The file shows the functions that register and request data related to the Processed Measurement table."),Object(b.b)("h4",{id:"processed_measurementgetprocesseddata"},Object(b.b)(c,{color:"#b2e4f7",mdxType:"Highlight"},"processed_measurement.getProcessedData()")),Object(b.b)("p",null,"Lists all measurement of processed measurement table record the last N minutes."),Object(b.b)("blockquote",null,Object(b.b)("p",{parentName:"blockquote"},"Parameters")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"name")," (",Object(b.b)("em",{parentName:"p"},"string"),") - qHAWAX name")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"interval_minutes")," (",Object(b.b)("em",{parentName:"p"},"integer"),") - the last N minutes we want"))),Object(b.b)("h4",{id:"processed_measurementhandleprocesseddata"},Object(b.b)(c,{color:"#b2e4f7",mdxType:"Highlight"},"processed_measurement.handleProcessedData()")),Object(b.b)("p",null,"Records processed measurement and valid processed measurement every five seconds"),Object(b.b)("p",null,"Json input of following Air Measurement fields:"),Object(b.b)("blockquote",null,Object(b.b)("p",{parentName:"blockquote"},"Parameters")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"timestamp")," (",Object(b.b)("em",{parentName:"p"},"string"),") - timestamp with time zone")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"CO")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of CO measurement in ppb")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"CO_ug_m3")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of CO measurement in ug/m3")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"H2S")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of H2S measurement in ppb")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"H2S_ug_m3")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of H2S measurement in ug/m3")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"SO2")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of SO2 measurement in ppb")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"SO2_ug_m3")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of SO2 measurement in ug/m3")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"NO2")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of NO2 measurement in ppb")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"NO2_ug_m3")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of NO2 measurement in ug/m3")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"O3")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of O3 measurement in ppb")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"O3_ug_m3")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of O3 measurement in ppb")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"PM25")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of PM25 measurement in ppb")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"PM1")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of PM1 measurement in ppb")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"PM10")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of PM10 measurement in ppb")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"UV")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of UV measurement")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"UVA")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of UVA measurement")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"UVB")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of UVB measurement")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"spl")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of noise measurement")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"humidity")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of humidity measurement")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"pressure")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of pressure measurement")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"temperature")," (",Object(b.b)("em",{parentName:"p"},"double"),") - value of temperature measurement in Celsius"))),Object(b.b)("h4",{id:"processed_measurementgetaverageprocessedmeasurementstimeperiod"},Object(b.b)(c,{color:"#b2e4f7",mdxType:"Highlight"},"processed_measurement.getAverageProcessedMeasurementsTimePeriod()")),Object(b.b)("p",null,"Lists all average measurements of processed measurement table in a defined period of time"),Object(b.b)("blockquote",null,Object(b.b)("p",{parentName:"blockquote"},"Parameters")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"name")," (",Object(b.b)("em",{parentName:"p"},"string"),") - qHAWAX name")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(b.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(b.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)"))),Object(b.b)("h4",{id:"processed_measurementgetprocessedmeasurementstimeperiod"},Object(b.b)(c,{color:"#b2e4f7",mdxType:"Highlight"},"processed_measurement.getProcessedMeasurementsTimePeriod()")),Object(b.b)("p",null,"Lists all measurements of processed measurement table in a define period of time"),Object(b.b)("blockquote",null,Object(b.b)("p",{parentName:"blockquote"},"Parameters")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"name")," (",Object(b.b)("em",{parentName:"p"},"string"),") - qHAWAX name")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(b.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(b.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)"))))}s.isMDXComponent=!0}}]);