(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{101:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),m=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=m(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=m(r),b=n,d=u["".concat(i,".").concat(b)]||u[b]||p[b]||o;return r?a.a.createElement(d,s(s({ref:t},l),{},{components:r})):a.a.createElement(d,s({ref:t},l))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},94:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return c})),r.d(t,"Highlight",(function(){return l})),r.d(t,"default",(function(){return u}));var n=r(2),a=r(6),o=(r(0),r(101)),i={id:"valid_processed_measurementMod",title:"Valid Processed Measurement Module",sidebar_label:"Valid Processed Measurement Module"},s={unversionedId:"valid_processed_measurementMod",id:"valid_processed_measurementMod",isDocsHomePage:!1,title:"Valid Processed Measurement Module",description:"The file shows the functions that register and request data related to the Valid Processed Measurement table.",source:"@site/APIresources/data.valid_processed_measurement.md",permalink:"/qAIRa.github.io/APIresources/valid_processed_measurementMod",sidebar_label:"Valid Processed Measurement Module",sidebar:"APIresources",previous:{title:"Processed Measurement Module",permalink:"/qAIRa.github.io/APIresources/processed_measurementMod"}},c=[],l=function(e){var t=e.children,r=e.color;return Object(o.b)("span",{style:{backgroundColor:r,borderRadius:"2px",color:"#000000",padding:"0.2rem"}},t)},m={rightToc:c,Highlight:l};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},m,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The file shows the functions that register and request data related to the Valid Processed Measurement table."),Object(o.b)("h4",{id:"valid_processed_measurementgetvalidprocessedmeasurementstimeperiod"},Object(o.b)(l,{color:"#b2e4f7",mdxType:"Highlight"},"valid_processed_measurement.getValidProcessedMeasurementsTimePeriod()")),Object(o.b)("p",null,"Lists all measurements of valid processed measurement table in a define period of time and company"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Parameters")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"qhawax_id")," (",Object(o.b)("em",{parentName:"p"},"integer"),") - qHAWAX ID")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"initial_timestamp")," (",Object(o.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"final_timestamp")," (",Object(o.b)("em",{parentName:"p"},"timestamp without timezone"),") - timestamp day-month-year hour:minute:second (UTC OO)"))),Object(o.b)("h4",{id:"valid_processed_measurementgetvalidprocesseddata"},Object(o.b)(l,{color:"#b2e4f7",mdxType:"Highlight"},"valid_processed_measurement.getValidProcessedData()")),Object(o.b)("p",null,"Lists all measurements of valid processed measurement table record the last N minutes"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Parameters")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"qhawax_id")," (",Object(o.b)("em",{parentName:"p"},"integer"),") - qHAWAX ID")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"interval_minutes")," (",Object(o.b)("em",{parentName:"p"},"integer"),") - the last N minutes we want it"))),Object(o.b)("h4",{id:"valid_processed_measurementgettimeofvalidprocessed"},Object(o.b)(l,{color:"#b2e4f7",mdxType:"Highlight"},"valid_processed_measurement.getTimeOfValidProcessed()")),Object(o.b)("p",null,"Gets the time of the last record in valid processed measurement table"),Object(o.b)("p",null,"If this qHAWAX does not exist, returns []"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Parameters")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"name")," (",Object(o.b)("em",{parentName:"li"},"string"),") - qHAWAX name")))}u.isMDXComponent=!0}}]);